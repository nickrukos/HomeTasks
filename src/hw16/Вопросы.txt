package questions.questions06;



public class Questions {

    public static void main(String[] args) {

        Building building = new Building(Building.Color.ORANGE, 15);

        building.open();



        // 1. Где будут доступны элементы перечисления Color, объявленного в классе Building?

                               В любом месте программы

        // 2. Где будут доступны классы RoomsCreator, FindSecretRooms и Room, объявленные в классе Building?

                               FindSecretRooms - в любом месте программы

                               RoomsCreator - внутри конструктора Building

                               Room - внутри класса Building

        // 3. Правильно ли выбраны модификаторы доступа классов RoomsCreator, FindSecretRooms и Room?

                               RoomsCreator - не должен иметь модификаторов доступа

                               FindSecretRooms имеет неявный модификатор доступа public, такой и должен быть для доступа из вне класса Builder

                               Room используется в методе close(), поэтому private выбран правильно

        // 4. Перечисления являются static вложенными или non-static внутренними классами?

                               static вложенными

        // 5. В каких из объявленных в Building классах можно обратиться к его экземпляру, как это сделать?

                               Можно обратиться к экземпляру любого класса из созданных.

                               Экземпляр класса RoomsCreator должен быть объявлен позже объявления класса

        // 6. Метод close класса Room переопределяет или затеняет метод close класса Building?

                               Затеняет

        // 7. C какими модификаторами доступа может быть объявлен класс RoomsCreator?

                               Без модификатора доступа

        // 8. В конструкторе класса RoomsCreator используется свойство MAX_ROOMS_COUNT.

                               // Чему равно его значение: 50 или 20? И почему?

                               20, происходит затенение свойства

        // 9. Значения каких свойств класса Building можно изменить из классов RoomsCreator, FindSecretRooms, Room?

                               RoomsCreator - к любым свойствам и методам

                               FindSecretRooms - ко всем свойствам и методам

                               Room - к статическим свойствам и методам

        // 10. Можно ли из класса RoomsCreator изменить значение аргумента color, переданного в конструктор Building? Почему?

                               Можно, имеется доступ ко всем свойствам и методам вннешнего класса

        // 11. Может ли класс Building наследоваться от класса RoomsCreator, класса FindSecretRooms или класса Room? Почему?

                               От RoomsCreator не может, RoomsCreator - внутри метода

                               От Room может - это по сути обычный класс



        // 12. Могут ли классы RoomsCreator, FindSecretRooms, Room, Color наследоваться от Building? Почему?

                               RoomsCreator не может, ог внутри метода

                               Room может - это обычный класс

                               FindSecretRooms не может - к нему доступ через объект внешнего класса

                               // 13. Можно ли класс FindSecretRooms сделать static классом? Что для этого нужно сделать?

                               Добавить ключевое слово "static" при объявлении класса



        // 1. В каких случаях имеет смысл создать именованный класс, реализующий java.lang.Runnable интерфейс?

                               Если интерфейс содержит более 1 метода

        // 2. В каких случаях имеет смысл создать анонимный класс, реализующий java.lang.Runnable интерфейс?

                               нужно создать только 1 экземпляр класса

                               нужно обрабатывать события в пользовательских интерфейсах

                               реализация метода интерфейса на лету

        // 3. В каких случаях имеет смысл создать анонимный класс, реализующий java.lang.Runnable интерфейс через лямбда выражение?

                               если в интерфейсе только 1 метод

        // 4. Чем локальные классы отличаются от анонимных? Что у них общего?

                               Оба объявляются и выполняются на лету, в процессе выполнения метода

                               Но у локального класса создается объект явным образом после объявления класса,

                               у анонимного класса нет явного объявления объекта

        // 5. Что такое effective final переменные?

                               Переменные которые явно не объявлены как final, но не именяющие значение в процеессе выполнения программы

        // 6. Чем отличаются static вложенные от non-static внутренних классов?

                               к экземплярам non-static-класса доступ только через объект внешнего класса

                               к экземплярам static-лласса доступ обычным образом

    }

}